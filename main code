let particles = []; // Массив для хранения объектов
let circleRadius = 200; // Радиус прозрачного большого круга
let temperatureSlider; // Ползунок температуры
let minSpeed = 0.05; // Минимальная скорость (при 24 градусах)
let maxSpeed = 1; // Максимальная скорость (сотке)

function setup() {
  createCanvas(windowWidth, windowHeight);
  background(10, 10, 10);
  
  temperatureSlider = createSlider(24, 100, 50); // минимум 24, макс 100, нач значение 50
  temperatureSlider.position(20, 45);
  temperatureSlider.style('width', '250px');
  
  textStyle(ITALIC);
  textAlign(CENTER);

  
  for (let i = 0; i < 50; i++) {
    particles.push({
      x: random(width),
      y: random(height),
      vx: random(-1, 1),
      vy: random(-1, 1),
      radius: random(5, 10),
      baseSpeed: random(minSpeed, maxSpeed)
    });
  }
}

function draw() {
  background(150, 190, 210);
  
  
  noStroke();
  fill(255, 255, 255, 50);
  ellipse(width / 2, height / 2, circleRadius * 2);

  
  
  for (let i = 0; i < particles.length; i++) {
    updateParticle(i);
    displayParticle(i);
  }
  
  fill(255); //для температуры 
  stroke(5);
  textSize(24);
  text(`Температура: ${temperatureSlider.value()}°C`, 400, 60);
}

function updateParticle(index) {
  let particles1 = particles[index];
  let temperature = temperatureSlider.value();
  let speedFactor = map(temperature, 24, 100, 1, 3);
  
 
  particles1.vx += random(-0.1, 0.1) * speedFactor;
  particles1.vy += random(-0.1, 0.1) * speedFactor;
  

  particles1.vx = constrain(particles1.vx, -maxSpeed * speedFactor, maxSpeed * speedFactor);
  particles1.vy = constrain(particles1.vy, -maxSpeed * speedFactor, maxSpeed * speedFactor);
  
  particles1.x += particles1.vx * speedFactor;
  particles1.y += particles1.vy * speedFactor;
  

  if (particles1.x < 0 || particles1.x > width) particles1.vx *= -1;
  if (particles1.y < 0 || particles1.y > height) particles1.vy *= -1;
  particles1.x = constrain(particles1.x, 0, width);
  particles1.y = constrain(particles1.y, 0, height);

  
  let distanceToCenter = dist(particles1.x, particles1.y, width / 2, height / 2);
  if (distanceToCenter > circleRadius - particles1.radius) {
    let normalX = (particles1.x - width / 2) / distanceToCenter;
    let normalY = (particles1.y - height / 2) / distanceToCenter;
    let dot = particles1.vx * normalX + particles1.vy * normalY;
    particles1.vx -= 2 * dot * normalX * speedFactor;
    particles1.vy -= 2 * dot * normalY * speedFactor;
    particles1.x = width / 2 + normalX * (circleRadius - particles1.radius);
    particles1.y = height / 2 + normalY * (circleRadius - particles1.radius);
  }
}


function displayParticle(index) {
  let particles1 = particles[index];
  noStroke();
  fill(160, 20, 190);
  ellipse(particles1.x, particles1.y, particles1.radius * 2.5);
}
